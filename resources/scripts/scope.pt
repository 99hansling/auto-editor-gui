#!/usr/bin/env auto-editor palet

; Enforce lexical scoping

(define (f x) (lambda (y) (+ x y)))
(assert (equal? ((f 10) 12) 22))

; Test that variables do not leak scope

(define (outer a)
  (define (inner1 b)
    (define (inner2 c) c)
    (inner2 b)
  )
  (inner1 a)
)

(outer 13)
(assert (not (var-exists? 'a)))
(assert (not (var-exists? 'b)))
(assert (not (var-exists? 'c)))

; Test `let` and `let*`

(assert (equal? (let ([x 5]) x) 5))
(assert (not (var-exists? 'x)))

(assert (equal?
  (let ([x 5])
    (let ([x 2] [y x]) #(y x))
  )
  #(5 2)
))

(assert (equal?
  (let* ([x 1] [y (+ x 1)]) #(y x))
  #(2 1)
))
